ARG APT_GCC=gcc:9.2

FROM ubuntu:jammy AS base
ARG DOWNLOADS=/usr/src/downloads

ENV DEBIAN_FRONTEND=noninteractive
RUN set -x \
 && apt-get --assume-yes update \
 && apt-get --assume-yes install software-properties-common \
 && apt-get --assume-yes download linux-firmware linux-source-5.15.0 \
 && mkdir -vp ${DOWNLOADS} \
 && mv -vf linux-firmware* ${DOWNLOADS}/ubuntu-firmware.deb \
 && mv -vf linux-source* ${DOWNLOADS}/ubuntu-kernel.deb

#RUN set -x \
# && apt-get --assume-yes install sqlite3 rpm2cpio curl \
# && base_url=http://amazonlinux.us-east-1.amazonaws.com \
# && mirror_url=$(curl -sfL $base_url/2/extras/kernel-5.10/latest/x86_64/mirror.list | head -1) \
# && curl -sfL $mirror_url/repodata/primary.sqlite.gz | gunzip > aws-primary.sqlite \
# && rpm_path=$(sqlite3 aws-primary.sqlite \
#      "SELECT location_href FROM packages WHERE name='kernel-devel' AND version LIKE '5.10.%' ORDER BY release DESC LIMIT 1" | \
#      sed 's#\.\./##g') \
# && curl -o ${DOWNLOADS}/aws-kernel.rpm -sfL $base_url/$rpm_path

FROM ${APT_GCC}
ARG DOWNLOADS=/usr/src/downloads
COPY --from=base ${DOWNLOADS}/ ${DOWNLOADS}/
RUN apt list libc6
#RUN sed -i 's/buster/bullseye/g' /etc/apt/sources.list
RUN apt-get update \
 && apt-get full-upgrade \
 && apt-get install -y \
    kernel-wedge \
    libncurses-dev \
    fakeroot \
    cpio \
    bison \
    flex \
    ccache \
    vim \
    gnupg2 \
    locales \
    bc \
    kmod \
    libelf-dev \
    rsync \
    gawk  \
    libudev-dev \
    pciutils-dev \
    libmpc-dev \
 && rm -f /bin/sh && ln -s /bin/bash /bin/sh

RUN apt list libc6
RUN cat /etc/apt/sources.list
#RUN wget http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/libc6_2.35-0ubuntu3_amd64.deb \
# && apt install ./libc6_2.35-0ubuntu3_amd64.deb
RUN wget http://archive.ubuntu.com/ubuntu/pool/universe/d/dwarves-dfsg/dwarves_1.20-1_amd64.deb \
 && apt install ./dwarves_1.20-1_amd64.deb \
 && echo pahole version: $(pahole --version)

########## Dapper Configuration #####################

ENV DAPPER_ENV VERSION DEBUG
ENV DAPPER_DOCKER_SOCKET true
ENV DAPPER_SOURCE /source
ENV DAPPER_OUTPUT ./dist ./build
ENV DAPPER_RUN_ARGS --privileged
ENV SHELL /bin/bash
WORKDIR ${DAPPER_SOURCE}

########## General Configuration #####################
ARG DAPPER_HOST_ARCH
ENV ARCH $DAPPER_HOST_ARCH
ENV DOWNLOADS ${DOWNLOADS}
#ENV WG_URL=${WG_URL}
#ENV WG_REPO=${WG_REPO}
#ENV WG_TAG=${WG_TAG}

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
